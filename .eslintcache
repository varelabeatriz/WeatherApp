[{"C:\\Users\\beatr\\Documents\\weather\\WeatherApp\\src\\index.js":"1","C:\\Users\\beatr\\Documents\\weather\\WeatherApp\\src\\App.js":"2","C:\\Users\\beatr\\Documents\\weather\\WeatherApp\\src\\reportWebVitals.js":"3","C:\\Users\\beatr\\Documents\\weather\\WeatherApp\\src\\components\\Forecast.js":"4"},{"size":517,"mtime":1625256499001,"results":"5","hashOfConfig":"6"},{"size":392,"mtime":1625256498998,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1625256499002,"results":"8","hashOfConfig":"6"},{"size":5906,"mtime":1625258733084,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1mqau93",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\beatr\\Documents\\weather\\WeatherApp\\src\\index.js",[],["20","21"],"C:\\Users\\beatr\\Documents\\weather\\WeatherApp\\src\\App.js",[],"C:\\Users\\beatr\\Documents\\weather\\WeatherApp\\src\\reportWebVitals.js",[],"C:\\Users\\beatr\\Documents\\weather\\WeatherApp\\src\\components\\Forecast.js",["22","23","24","25","26","27","28","29"],"import axios from 'axios';\r\nimport { Fragment, useState, useEffect } from 'react';\r\nimport './Forecast.css'\r\n\r\nfunction Forecast() {\r\n    const [location, setLocation] = useState(false);\r\n    const [weather, setWeather] = useState(false);\r\n\r\n    let getWeather = async (lat, long) => {\r\n        let res = await axios.get(\"http://api.openweathermap.org/data/2.5/forecast\", {\r\n            params: {\r\n                lat: lat,\r\n                lon: long,\r\n                appid: '02c5b83f14d5c2e97a63f68323a44bc7',\r\n                lang: 'pt',\r\n                units: 'metric'\r\n            }\r\n        });\r\n        setWeather(res.data);\r\n        console.log(res.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            getWeather(position.coords.latitude, position.coords.longitude);\r\n            setLocation(true)\r\n        })\r\n    }, []);\r\n\r\n    if (!location) {\r\n        return (\r\n            <>\r\n                Habilite a localização no browser!\r\n            </>\r\n        )\r\n    } else if (!weather) {\r\n        return (\r\n            <>\r\n                Carregando...\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n\r\n        Date.prototype.addHours= function(h){\r\n            this.setHours(this.getHours()+h);\r\n            return this;\r\n        }\r\n\r\n        let date1 = new Date().addHours(3);\r\n        let time1 = date1.toLocaleTimeString([], { hour: '2-digit' });\r\n\r\n        let date2 = new Date().addHours(6);\r\n        let time2 = date2.toLocaleTimeString([], { hour: '2-digit' });\r\n\r\n        let date3 = new Date().addHours(9);\r\n        let time3 = date3.toLocaleTimeString([], { hour: '2-digit' });\r\n\r\n        let date4 = new Date().addHours(12);\r\n        let time4 = date4.toLocaleTimeString([], { hour: '2-digit' });\r\n\r\n        let date5 = new Date().addHours(15);\r\n        let time5 = date5.toLocaleTimeString([], { hour: '2-digit' });\r\n\r\n        let date6 = new Date().addHours(18);\r\n        let time6 = date6.toLocaleTimeString([], { hour: '2-digit' });\r\n\r\n        function arredonda(n) {\r\n            return n.toFixed(0);\r\n        }\r\n\r\n        let tempAtual = arredonda(weather['list'][0]['main']['temp']);\r\n        let tempMax = arredonda(weather['list'][0]['main']['temp_max']);\r\n        let tempMin = arredonda(weather['list'][0]['main']['temp_min']);\r\n        let temp3 = arredonda(weather['list'][1]['main']['temp']);\r\n        let temp6 = arredonda(weather['list'][2]['main']['temp_min']);\r\n        let temp9 = arredonda(weather['list'][3]['main']['temp_min']);\r\n        let temp12 = arredonda(weather['list'][4]['main']['temp_min']);\r\n        let temp15 = arredonda(weather['list'][5]['main']['temp_min']);\r\n        let temp18 = arredonda(weather['list'][6]['main']['temp_min']);\r\n\r\n        let icon = weather['list'][0]['weather'][0]['icon']\r\n        let icon1 = weather['list'][1]['weather'][0]['icon']\r\n        let icon2 = weather['list'][2]['weather'][0]['icon']\r\n        let icon3 = weather['list'][3]['weather'][0]['icon']\r\n        let icon4 = weather['list'][4]['weather'][0]['icon']\r\n        let icon5 = weather['list'][5]['weather'][0]['icon']\r\n        let icon6 = weather['list'][6]['weather'][0]['icon']\r\n\r\n        return (\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"header\">\r\n                    <p>{weather['city']['name']}</p>\r\n                    <p className=\"temp\">{tempAtual}°</p>\r\n                    <p>{weather['list'][0]['weather'][0]['description']}</p>\r\n                    <div className=\"maxAndMin\">\r\n                        <p>Máx: {tempMax}°</p>\r\n                        <p>Mín: {tempMin}°</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"forecastRow\">\r\n\r\n                    <div className=\"hourlyForecast\">\r\n                        <p>Agora</p>\r\n                        <img src={\"https://openweathermap.org/img/w/\" + icon + \".png\"}></img>\r\n                        <p>{tempAtual}°</p>\r\n                    </div>\r\n\r\n                    <div className=\"hourlyForecast\">\r\n                        <p>{time1}</p>\r\n                        <img src={\"https://openweathermap.org/img/w/\" + icon1 + \".png\"}></img>\r\n                        <p>{temp3}°</p>\r\n                    </div>\r\n\r\n                    <div className=\"hourlyForecast\">\r\n                        <p>{time2}</p>\r\n                        <img src={\"https://openweathermap.org/img/w/\" + icon2 + \".png\"}></img>\r\n                        <p>{temp6}°</p>\r\n                    </div>\r\n\r\n                    <div className=\"hourlyForecast\">\r\n                        <p>{time3}</p>\r\n                        <img src={\"https://openweathermap.org/img/w/\" + icon3 + \".png\"}></img>\r\n                        <p>{temp9}°</p>\r\n                    </div>\r\n\r\n                    <div className=\"hourlyForecast\">\r\n                        <p>{time4}</p>\r\n                        <img src={\"https://openweathermap.org/img/w/\" + icon4 + \".png\"}></img>\r\n                        <p>{temp12}°</p>\r\n                    </div>\r\n\r\n                    <div className=\"hourlyForecast\">\r\n                        <p>{time5}</p>\r\n                        <img src={\"https://openweathermap.org/img/w/\" + icon5 + \".png\"}></img>\r\n                        <p>{temp15}°</p>\r\n                    </div>\r\n\r\n                    <div className=\"hourlyForecast\">\r\n                        <p>{time6}</p>\r\n                        <img src={\"https://openweathermap.org/img/w/\" + icon6 + \".png\"}></img>\r\n                        <p>{temp18}°</p>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"data\">\r\n                    <p>Pressão: {weather['list'][0]['main']['pressure']} hPa</p>\r\n                    <p>Umidade: {weather['list'][0]['main']['humidity']}%</p>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Forecast;",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":45,"column":9,"nodeType":"36","messageId":"37","endLine":48,"endColumn":10},{"ruleId":"38","severity":1,"message":"39","line":108,"column":25,"nodeType":"40","endLine":108,"endColumn":88},{"ruleId":"38","severity":1,"message":"39","line":114,"column":25,"nodeType":"40","endLine":114,"endColumn":89},{"ruleId":"38","severity":1,"message":"39","line":120,"column":25,"nodeType":"40","endLine":120,"endColumn":89},{"ruleId":"38","severity":1,"message":"39","line":126,"column":25,"nodeType":"40","endLine":126,"endColumn":89},{"ruleId":"38","severity":1,"message":"39","line":132,"column":25,"nodeType":"40","endLine":132,"endColumn":89},{"ruleId":"38","severity":1,"message":"39","line":138,"column":25,"nodeType":"40","endLine":138,"endColumn":89},{"ruleId":"38","severity":1,"message":"39","line":144,"column":25,"nodeType":"40","endLine":144,"endColumn":89},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]